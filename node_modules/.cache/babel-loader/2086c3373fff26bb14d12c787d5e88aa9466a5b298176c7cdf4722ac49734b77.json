{"ast":null,"code":"import _taggedTemplateLiteral from\"D:/Github/Leo_log_project/leoblogclient/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import{gql}from\"@apollo/client\";export var QUERY_POSTS=gql(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  query Query($pageNumber: Int,$page:Int,$typeId:String) {\\n    posts(pageNumber: $pageNumber,page:$page,typeId:$typeId) {\\n      data {\\n        id\\n        title\\n        context\\n        createAt\\n        types {\\n          id\\n          type\\n        }\\n      }\\n      total\\n      error\\n    }\\n  }\\n\"])));export var QUERY_POST=gql(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  query Query($id: String) {\\n    post(id: $id) {\\n      data {\\n        id\\n        title\\n        context\\n        createAt\\n        types {\\n          id\\n          type\\n        }\\n      }\\n      relatedPosts {\\n        id\\n        title\\n      }\\n      error\\n    }\\n  }\\n\"])));export var ADD_POST=gql(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  mutation ($title: String!, $context: String!, $types: [String]) {\\n    addPost(title: $title, context: $context, types: $types) {\\n      data {\\n        id\\n      }\\n      error\\n    }\\n  }\\n\"])));export var UPDATE_POST=gql(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  mutation (\\n    $id: String!\\n    $types: [String]\\n    $title: String!\\n    $context: String!\\n  ) {\\n    updatePost(id: $id, types: $types, title: $title, context: $context) {\\n      data {\\n        id\\n        title\\n        context\\n        types {\\n          id\\n          type\\n        }\\n      }\\n      error\\n    }\\n  }\\n\"])));","map":{"version":3,"names":["gql","QUERY_POSTS","_templateObject","_taggedTemplateLiteral","QUERY_POST","_templateObject2","ADD_POST","_templateObject3","UPDATE_POST","_templateObject4"],"sources":["D:/Github/Leo_log_project/leoblogclient/src/graphql/post.ts"],"sourcesContent":["import { gql } from \"@apollo/client\";\r\n\r\nexport const QUERY_POSTS = gql`\r\n  query Query($pageNumber: Int,$page:Int,$typeId:String) {\r\n    posts(pageNumber: $pageNumber,page:$page,typeId:$typeId) {\r\n      data {\r\n        id\r\n        title\r\n        context\r\n        createAt\r\n        types {\r\n          id\r\n          type\r\n        }\r\n      }\r\n      total\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const QUERY_POST = gql`\r\n  query Query($id: String) {\r\n    post(id: $id) {\r\n      data {\r\n        id\r\n        title\r\n        context\r\n        createAt\r\n        types {\r\n          id\r\n          type\r\n        }\r\n      }\r\n      relatedPosts {\r\n        id\r\n        title\r\n      }\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ADD_POST = gql`\r\n  mutation ($title: String!, $context: String!, $types: [String]) {\r\n    addPost(title: $title, context: $context, types: $types) {\r\n      data {\r\n        id\r\n      }\r\n      error\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UPDATE_POST = gql`\r\n  mutation (\r\n    $id: String!\r\n    $types: [String]\r\n    $title: String!\r\n    $context: String!\r\n  ) {\r\n    updatePost(id: $id, types: $types, title: $title, context: $context) {\r\n      data {\r\n        id\r\n        title\r\n        context\r\n        types {\r\n          id\r\n          type\r\n        }\r\n      }\r\n      error\r\n    }\r\n  }\r\n`;\r\n"],"mappings":"oNAAA,OAASA,GAAG,KAAQ,gBAAgB,CAEpC,MAAO,IAAM,CAAAC,WAAW,CAAGD,GAAG,CAAAE,eAAA,GAAAA,eAAA,CAAAC,sBAAA,2TAiB7B,CAED,MAAO,IAAM,CAAAC,UAAU,CAAGJ,GAAG,CAAAK,gBAAA,GAAAA,gBAAA,CAAAF,sBAAA,+RAoB5B,CAED,MAAO,IAAM,CAAAG,QAAQ,CAAGN,GAAG,CAAAO,gBAAA,GAAAA,gBAAA,CAAAJ,sBAAA,2MAS1B,CAED,MAAO,IAAM,CAAAK,WAAW,CAAGR,GAAG,CAAAS,gBAAA,GAAAA,gBAAA,CAAAN,sBAAA,qVAoB7B"},"metadata":{},"sourceType":"module","externalDependencies":[]}