{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\Leo_log_project\\\\leoblogclient\\\\src\\\\pages\\\\HomePage\\\\components\\\\sideBar\\\\SideBarComponent.tsx\",\n  _s = $RefreshSig$();\nimport { Box, Button, Modal, TextField } from \"@mui/material\";\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { useAddPostType, useQueryPostTypes } from \"../../../../hooks/usePost\";\nimport { StyledTypeHeader, StyledTypeSpan, StyledTypeSpanDiv } from \"./style\";\nimport { EDIT_STATE } from \"../../../../common/const\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst style = {\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate(-50%, -50%)\",\n  width: 400,\n  border: \"2px solid #000\",\n  boxShadow: 24,\n  p: 4,\n  display: \"inline\",\n  backgroundColor: \"white\"\n};\nconst SideBarComponent = () => {\n  _s();\n  const history = useNavigate();\n  const {\n    _data\n  } = useQueryPostTypes();\n  const [openNewType, setOpenNewType] = useState(false);\n  const [newTypeValue, setNewTypeValue] = useState(\"\");\n  const {\n    addPostTypeFunction\n  } = useAddPostType();\n  const ToPostType = blogId => history(`/leoblogclient/blogs/${blogId}`);\n  const submitNewType = () => {\n    addPostTypeFunction({\n      variables: {\n        type: newTypeValue\n      }\n    }).then(r => {\n      window.location.reload();\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(StyledTypeHeader, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Types\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), EDIT_STATE ? /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => setOpenNewType(true),\n        children: \"Add New Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(StyledTypeSpanDiv, {\n      children: _data && _data.map((data, index) => /*#__PURE__*/_jsxDEV(StyledTypeSpan, {\n        onClick: () => ToPostType(data.id),\n        children: data.type\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: openNewType,\n      onClose: () => setOpenNewType(false),\n      \"aria-labelledby\": \"modal-modal-title\",\n      \"aria-describedby\": \"modal-modal-description\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        component: \"div\",\n        sx: style,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            id: \"outlined-basic\",\n            label: \"New Type\",\n            variant: \"outlined\",\n            onChange: v => setNewTypeValue(v.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => submitNewType(),\n          variant: \"contained\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SideBarComponent, \"eVuIgIJBhb2n0/kSNHBAIJ59wKw=\", false, function () {\n  return [useNavigate, useQueryPostTypes, useAddPostType];\n});\n_c = SideBarComponent;\nexport default SideBarComponent;\nvar _c;\n$RefreshReg$(_c, \"SideBarComponent\");","map":{"version":3,"names":["Box","Button","Modal","TextField","React","useState","useAddPostType","useQueryPostTypes","StyledTypeHeader","StyledTypeSpan","StyledTypeSpanDiv","EDIT_STATE","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","style","position","top","left","transform","width","border","boxShadow","p","display","backgroundColor","SideBarComponent","_s","history","_data","openNewType","setOpenNewType","newTypeValue","setNewTypeValue","addPostTypeFunction","ToPostType","blogId","submitNewType","variables","type","then","r","window","location","reload","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","onClick","map","data","index","id","open","onClose","component","sx","label","onChange","v","target","value","_c","$RefreshReg$"],"sources":["D:/Github/Leo_log_project/leoblogclient/src/pages/HomePage/components/sideBar/SideBarComponent.tsx"],"sourcesContent":["import { Box, Button, Modal, TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { FC, useState } from \"react\";\r\nimport { useAddPostType, useQueryPostTypes } from \"../../../../hooks/usePost\";\r\nimport { PostType } from \"../../../../types/postType\";\r\nimport { StyledTypeHeader, StyledTypeSpan, StyledTypeSpanDiv } from \"./style\";\r\nimport { EDIT_STATE } from \"../../../../common/const\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n  display: \"inline\",\r\n  backgroundColor: \"white\",\r\n};\r\n\r\nconst SideBarComponent: FC = () => {\r\n  const history = useNavigate();\r\n\r\n  const { _data } = useQueryPostTypes();\r\n\r\n  const [openNewType, setOpenNewType] = useState(false);\r\n  const [newTypeValue, setNewTypeValue] = useState(\"\");\r\n\r\n  const { addPostTypeFunction } = useAddPostType();\r\n\r\n  const ToPostType = (blogId: string) => history(`/leoblogclient/blogs/${blogId}`);\r\n\r\n  const submitNewType = () => {\r\n    addPostTypeFunction({\r\n      variables: { type: newTypeValue },\r\n    })\r\n      .then((r) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledTypeHeader>\r\n        <h3>Types</h3>\r\n        {EDIT_STATE ? (\r\n          <Button variant=\"outlined\" onClick={() => setOpenNewType(true)}>\r\n            Add New Type\r\n          </Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </StyledTypeHeader>\r\n      <StyledTypeSpanDiv>\r\n        {_data &&\r\n          _data.map((data: PostType, index: number) => (\r\n            <StyledTypeSpan key={index} onClick={() => ToPostType(data.id)}>\r\n              {data.type}\r\n            </StyledTypeSpan>\r\n          ))}\r\n      </StyledTypeSpanDiv>\r\n      <Modal\r\n        open={openNewType}\r\n        onClose={() => setOpenNewType(false)}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box component=\"div\" sx={style}>\r\n          <div>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"New Type\"\r\n              variant=\"outlined\"\r\n              onChange={(v) => setNewTypeValue(v.target.value)}\r\n            />\r\n          </div>\r\n          <br />\r\n          <Button onClick={() => submitNewType()} variant=\"contained\">\r\n            Submit\r\n          </Button>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default SideBarComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}