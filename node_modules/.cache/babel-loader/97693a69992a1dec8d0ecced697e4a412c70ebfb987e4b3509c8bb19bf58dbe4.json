{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\Leo_log_project\\\\leoblogclient\\\\src\\\\pages\\\\BlogAddPage\\\\BlogAddPage.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Checkbox, FormControl, ListItemText, MenuItem, OutlinedInput, Select, TextField } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useAddPost, useQueryPostTypes } from \"../../hooks/usePost\";\nimport FullTextEditor from \"./components/FullTextEditor/FullTextEditor\";\nimport { FullTextEditDiv, StyledBlogAddBody } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BlogAddPage = () => {\n  _s();\n  const history = useNavigate();\n  const [html, setHtml] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [types, setTypes] = useState([]);\n  const {\n    loading: postTypesLoading,\n    _data: postTypesData\n  } = useQueryPostTypes();\n  const {\n    addPostFunction,\n    loading\n  } = useAddPost();\n  const addNewBlog = () => {\n    const typeIds = types.map(type => postTypesData.find(e => e.type === type).id);\n    addPostFunction({\n      variables: {\n        title: title,\n        context: html,\n        types: typeIds\n      }\n    }).then(r => {\n      history(`/leoblogclient/blogs/null`);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(StyledBlogAddBody, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"addPage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        variant: \"outlined\",\n        inputProps: {\n          \"aria-label\": \"Without label\"\n        },\n        onChange: v => setTitle(v.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Types:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          m: 0,\n          width: 300,\n          mt: 3\n        },\n        children: !postTypesLoading && /*#__PURE__*/_jsxDEV(Select, {\n          multiple: true,\n          displayEmpty: true,\n          value: types,\n          onChange: v => setTypes(typeof v.target.value == \"string\" ? v.target.value.split(\",\") : v.target.value),\n          input: /*#__PURE__*/_jsxDEV(OutlinedInput, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 24\n          }, this),\n          renderValue: selected => selected.join(\", \"),\n          inputProps: {\n            \"aria-label\": \"Without label\"\n          },\n          children: postTypesData.map(postType => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: postType.type,\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: types.indexOf(postType.type) > -1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: postType.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 21\n            }, this)]\n          }, postType.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Context:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FullTextEditDiv, {\n        children: /*#__PURE__*/_jsxDEV(FullTextEditor, {\n          html: html,\n          setFullText: e => {\n            setHtml(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => addNewBlog(),\n        variant: \"contained\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(BlogAddPage, \"l2jRooTa8rPbllanmsNIbMRYaHY=\", false, function () {\n  return [useNavigate, useQueryPostTypes, useAddPost];\n});\n_c = BlogAddPage;\nexport default BlogAddPage;\nvar _c;\n$RefreshReg$(_c, \"BlogAddPage\");","map":{"version":3,"names":["Button","Checkbox","FormControl","ListItemText","MenuItem","OutlinedInput","Select","TextField","useState","useNavigate","useAddPost","useQueryPostTypes","FullTextEditor","FullTextEditDiv","StyledBlogAddBody","jsxDEV","_jsxDEV","Fragment","_Fragment","BlogAddPage","_s","history","html","setHtml","title","setTitle","types","setTypes","loading","postTypesLoading","_data","postTypesData","addPostFunction","addNewBlog","typeIds","map","type","find","e","id","variables","context","then","r","catch","error","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","inputProps","onChange","v","target","value","sx","m","width","mt","multiple","displayEmpty","split","input","renderValue","selected","join","postType","checked","indexOf","primary","setFullText","onClick","_c","$RefreshReg$"],"sources":["D:/Github/Leo_log_project/leoblogclient/src/pages/BlogAddPage/BlogAddPage.tsx"],"sourcesContent":["import {\r\n  Button,\r\n  Checkbox,\r\n  FormControl,\r\n  ListItemText,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { FC, useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useAddPost, useQueryPostTypes } from \"../../hooks/usePost\";\r\nimport { PostType } from \"../../types/postType\";\r\nimport FullTextEditor from \"./components/FullTextEditor/FullTextEditor\";\r\nimport { FullTextEditDiv, StyledBlogAddBody } from \"./style\";\r\n\r\nconst BlogAddPage: FC = () => {\r\n  const history = useNavigate();\r\n\r\n  const [html, setHtml] = useState<string>(\"\");\r\n  const [title, setTitle] = useState<string>(\"\");\r\n  const [types, setTypes] = useState<string[]>([]);\r\n\r\n  const { loading: postTypesLoading, _data: postTypesData } =\r\n    useQueryPostTypes();\r\n\r\n  const { addPostFunction, loading } = useAddPost();\r\n\r\n  const addNewBlog = () => {\r\n    const typeIds = types.map(\r\n      (type) => postTypesData.find((e: PostType) => e.type === type).id\r\n    );\r\n    addPostFunction({\r\n      variables: { title: title, context: html, types: typeIds },\r\n    })\r\n      .then((r) => {\r\n        history(`/leoblogclient/blogs/null`);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <p>Loading</p>\r\n      ) : (\r\n        <StyledBlogAddBody>\r\n          <h2>addPage</h2>\r\n          <h3>Title:</h3>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            variant=\"outlined\"\r\n            inputProps={{ \"aria-label\": \"Without label\" }}\r\n            onChange={(v) => setTitle(v.target.value)}\r\n          />\r\n          <h3>Types:</h3>\r\n          <FormControl sx={{ m: 0, width: 300, mt: 3 }}>\r\n            {!postTypesLoading && (\r\n              <Select\r\n                multiple\r\n                displayEmpty\r\n                value={types}\r\n                onChange={(v) =>\r\n                  setTypes(\r\n                    typeof v.target.value == \"string\"\r\n                      ? v.target.value.split(\",\")\r\n                      : v.target.value\r\n                  )\r\n                }\r\n                input={<OutlinedInput />}\r\n                renderValue={(selected) => selected.join(\", \")}\r\n                inputProps={{ \"aria-label\": \"Without label\" }}\r\n              >\r\n                {postTypesData.map((postType: PostType) => (\r\n                  <MenuItem key={postType.id} value={postType.type}>\r\n                    <Checkbox checked={types.indexOf(postType.type) > -1} />\r\n                    <ListItemText primary={postType.type} />\r\n                  </MenuItem>\r\n                ))}\r\n              </Select>\r\n            )}\r\n          </FormControl>\r\n          <h3>Context:</h3>\r\n          <FullTextEditDiv>\r\n            <FullTextEditor\r\n              html={html}\r\n              setFullText={(e) => {\r\n                setHtml(e);\r\n              }}\r\n            />\r\n          </FullTextEditDiv>\r\n          <Button onClick={() => addNewBlog()} variant=\"contained\">\r\n            Submit\r\n          </Button>\r\n        </StyledBlogAddBody>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default BlogAddPage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}