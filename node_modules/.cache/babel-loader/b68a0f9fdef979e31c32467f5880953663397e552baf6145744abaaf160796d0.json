{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\Leo_log_project\\\\leoblogclient\\\\src\\\\pages\\\\BlogAddPage\\\\components\\\\FullTextEditor\\\\FullTextEditor.tsx\",\n  _s = $RefreshSig$();\nimport * as React from \"react\";\nimport { useMemo, useRef } from \"react\";\nimport ReactQuill from \"react-quill\";\nimport { ReactQuillDiv } from \"./style\";\nimport { uploadImage } from \"../../../../aws/awsImage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FullTextEditor = _ref => {\n  _s();\n  let {\n    html,\n    setFullText\n  } = _ref;\n  const textInput = useRef(null);\n  const handlerImage = () => {\n    const input = document.createElement(\"input\");\n    input.setAttribute(\"type\", \"file\");\n    input.setAttribute(\"accept\", \"image/*\");\n    input.setAttribute(\"multiple\", \"multiple\");\n    input.click();\n    input.onchange = async e => {\n      const files = input.files;\n      if (files) {\n        Array.from(files).forEach(async item => {\n          uploadImage(item, item.name, () => {\n            const quill = (textInput === null || textInput === void 0 ? void 0 : textInput.current).getEditor(); //获取到编辑器本身\n            const cursorPosition = quill.getSelection().index; //获取当前光标位置\n            quill.insertEmbed(cursorPosition, \"image\", `https://leoblogimages.s3.amazonaws.com/${item.name}`); //插入图片\n            quill.setSelection(cursorPosition + 1); //光标位置加1\n          });\n        });\n      }\n    };\n  };\n\n  const modules = useMemo(() => ({\n    toolbar: {\n      container: [[{\n        header: \"1\"\n      }, {\n        header: \"2\"\n      }, {\n        codeBlock: true\n      }, {\n        font: []\n      }], [{\n        size: []\n      }], [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"], [{\n        list: \"ordered\"\n      }, {\n        list: \"bullet\"\n      }, {\n        indent: \"-1\"\n      }, {\n        indent: \"+1\"\n      }], [\"link\", \"code-block\"], [\"clean\"]],\n      handlers: {\n        image: handlerImage\n      }\n    },\n    clipboard: {\n      // toggle to add extra line breaks when pasting HTML:\n      matchVisual: false\n    }\n  }), []);\n  return /*#__PURE__*/_jsxDEV(ReactQuillDiv, {\n    children: /*#__PURE__*/_jsxDEV(ReactQuill, {\n      ref: textInput,\n      theme: \"snow\",\n      onChange: e => setFullText(e),\n      value: html,\n      modules: modules,\n      bounds: \".app\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(FullTextEditor, \"6SQR3slLcjR01bEMf4+u/w3CR2k=\");\n_c = FullTextEditor;\nexport default FullTextEditor;\nvar _c;\n$RefreshReg$(_c, \"FullTextEditor\");","map":{"version":3,"names":["React","useMemo","useRef","ReactQuill","ReactQuillDiv","uploadImage","jsxDEV","_jsxDEV","FullTextEditor","_ref","_s","html","setFullText","textInput","handlerImage","input","document","createElement","setAttribute","click","onchange","e","files","Array","from","forEach","item","name","quill","current","getEditor","cursorPosition","getSelection","index","insertEmbed","setSelection","modules","toolbar","container","header","codeBlock","font","size","list","indent","handlers","image","clipboard","matchVisual","children","ref","theme","onChange","value","bounds","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Github/Leo_log_project/leoblogclient/src/pages/BlogAddPage/components/FullTextEditor/FullTextEditor.tsx"],"sourcesContent":["import * as React from \"react\";\r\nimport { useMemo, useRef } from \"react\";\r\nimport ReactQuill from \"react-quill\";\r\nimport { ReactQuillDiv } from \"./style\";\r\nimport { uploadImage } from \"../../../../aws/awsImage\";\r\n\r\nexport type ImageCheck = {\r\n  width: number;\r\n  height: number;\r\n};\r\n\r\ninterface IProps {\r\n  html: string;\r\n  setFullText: (html: string) => void;\r\n}\r\n\r\nconst FullTextEditor = ({ html, setFullText }: IProps): JSX.Element => {\r\n  const textInput = useRef(null);\r\n\r\n  const handlerImage = () => {\r\n    const input = document.createElement(\"input\");\r\n    input.setAttribute(\"type\", \"file\");\r\n    input.setAttribute(\"accept\", \"image/*\");\r\n    input.setAttribute(\"multiple\", \"multiple\");\r\n    input.click();\r\n    input.onchange = async (e: any) => {\r\n      const files = input.files;\r\n      if (files) {\r\n        Array.from(files).forEach(async (item) => {\r\n          uploadImage(item, item.name, () => {\r\n            const quill = (textInput?.current as any).getEditor(); //获取到编辑器本身\r\n            const cursorPosition = quill.getSelection().index; //获取当前光标位置\r\n            quill.insertEmbed(\r\n              cursorPosition,\r\n              \"image\",\r\n              `https://leoblogimages.s3.amazonaws.com/${item.name}`\r\n            ); //插入图片\r\n            quill.setSelection(cursorPosition + 1); //光标位置加1\r\n          });\r\n        });\r\n      }\r\n    };\r\n  };\r\n\r\n  const modules = useMemo(\r\n    () => ({\r\n      toolbar: {\r\n        container: [\r\n          [{ header: \"1\" }, { header: \"2\" }, { codeBlock: true }, { font: [] }],\r\n          [{ size: [] }],\r\n          [\"bold\", \"italic\", \"underline\", \"strike\", \"blockquote\"],\r\n          [\r\n            { list: \"ordered\" },\r\n            { list: \"bullet\" },\r\n            { indent: \"-1\" },\r\n            { indent: \"+1\" },\r\n          ],\r\n          [\"link\",  \"code-block\"],\r\n          [\"clean\"],\r\n        ],\r\n        handlers: {\r\n          image: handlerImage,\r\n        },\r\n      },\r\n      clipboard: {\r\n        // toggle to add extra line breaks when pasting HTML:\r\n        matchVisual: false,\r\n      },\r\n    }),\r\n    []\r\n  );\r\n\r\n  return (\r\n    <ReactQuillDiv>\r\n      <ReactQuill\r\n        ref={textInput}\r\n        theme={\"snow\"}\r\n        onChange={(e) => setFullText(e)}\r\n        value={html}\r\n        modules={modules}\r\n        bounds={\".app\"}\r\n      />\r\n    </ReactQuillDiv>\r\n  );\r\n};\r\n\r\nexport default FullTextEditor;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}