{"ast":null,"code":"var _jsxFileName = \"D:\\\\Github\\\\Leo_log_project\\\\leoblogclient\\\\src\\\\pages\\\\BlogUpdatePage\\\\BlogUpdatePage.tsx\",\n  _s = $RefreshSig$();\nimport { Button, Checkbox, FormControl, ListItemText, MenuItem, OutlinedInput, Select, TextField } from \"@mui/material\";\nimport { useEffect, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { useQueryBlog, useQueryPostTypes, useUpdatePost } from \"../../hooks/usePost\";\nimport FullTextEditor from \"./components/FullTextEditor/FullTextEditor\";\nimport { FullTextEditDiv, StyledBlogAddBody } from \"./style\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BlogUpdatePage = () => {\n  _s();\n  const history = useNavigate();\n  const params = useParams();\n  const [html, setHtml] = useState(\"\");\n  const [title, setTitle] = useState(\"\");\n  const [types, setTypes] = useState([]);\n  const {\n    loading: postTypesLoading,\n    _data: postTypesData\n  } = useQueryPostTypes();\n  const {\n    loading: postGetLoading,\n    error,\n    _data: postData\n  } = useQueryBlog(params !== null && params !== void 0 && params.id ? params === null || params === void 0 ? void 0 : params.id : \"\");\n  const {\n    updatePostFunction,\n    loading\n  } = useUpdatePost();\n  const updateBlog = () => {\n    const typeIds = types.map(type => postTypesData.find(e => e.type === type).id);\n    updatePostFunction({\n      variables: {\n        id: params !== null && params !== void 0 && params.id ? params === null || params === void 0 ? void 0 : params.id : \"\",\n        types: typeIds,\n        title: title,\n        context: html\n      }\n    }).then(r => {\n      history(`/blogs/null`);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n  useEffect(() => {\n    if (!postGetLoading) {\n      setHtml(postData.context);\n      setTitle(postData.title);\n      const types = postData.types ? postData.types.map(type => type.type) : [];\n      setTypes(types);\n    }\n  }, [postGetLoading]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: postTypesLoading || postGetLoading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(StyledBlogAddBody, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"updatePage\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        variant: \"outlined\",\n        inputProps: {\n          \"aria-label\": \"Without label\"\n        },\n        value: title,\n        onChange: v => setTitle(v.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Types:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n        sx: {\n          m: 0,\n          width: 300,\n          mt: 3\n        },\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          multiple: true,\n          displayEmpty: true,\n          value: types,\n          onChange: v => setTypes(typeof v.target.value == \"string\" ? v.target.value.split(\",\") : v.target.value),\n          input: /*#__PURE__*/_jsxDEV(OutlinedInput, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 22\n          }, this),\n          renderValue: selected => selected.join(\", \"),\n          inputProps: {\n            \"aria-label\": \"Without label\"\n          },\n          children: postTypesData.map(postType => /*#__PURE__*/_jsxDEV(MenuItem, {\n            value: postType.type,\n            children: [/*#__PURE__*/_jsxDEV(Checkbox, {\n              checked: types.indexOf(postType.type) > -1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: postType.type\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 19\n            }, this)]\n          }, postType.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Context:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(FullTextEditDiv, {\n        children: /*#__PURE__*/_jsxDEV(FullTextEditor, {\n          html: html,\n          setFullText: e => {\n            setHtml(e);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: () => updateBlog(),\n        variant: \"contained\",\n        children: \"Update\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_s(BlogUpdatePage, \"izCTDj3RqupKbuIeHQk4sAD3qnU=\", false, function () {\n  return [useNavigate, useParams, useQueryPostTypes, useQueryBlog, useUpdatePost];\n});\n_c = BlogUpdatePage;\nexport default BlogUpdatePage;\nvar _c;\n$RefreshReg$(_c, \"BlogUpdatePage\");","map":{"version":3,"names":["Button","Checkbox","FormControl","ListItemText","MenuItem","OutlinedInput","Select","TextField","useEffect","useState","useNavigate","useParams","useQueryBlog","useQueryPostTypes","useUpdatePost","FullTextEditor","FullTextEditDiv","StyledBlogAddBody","jsxDEV","_jsxDEV","Fragment","_Fragment","BlogUpdatePage","_s","history","params","html","setHtml","title","setTitle","types","setTypes","loading","postTypesLoading","_data","postTypesData","postGetLoading","error","postData","id","updatePostFunction","updateBlog","typeIds","map","type","find","e","variables","context","then","r","catch","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","variant","inputProps","value","onChange","v","target","sx","m","width","mt","multiple","displayEmpty","split","input","renderValue","selected","join","postType","checked","indexOf","primary","setFullText","onClick","_c","$RefreshReg$"],"sources":["D:/Github/Leo_log_project/leoblogclient/src/pages/BlogUpdatePage/BlogUpdatePage.tsx"],"sourcesContent":["import {\r\n  Button,\r\n  Checkbox,\r\n  FormControl,\r\n  ListItemText,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { FC, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n  useAddPost,\r\n  useQueryBlog,\r\n  useQueryPostTypes,\r\n  useUpdatePost,\r\n} from \"../../hooks/usePost\";\r\nimport { PostType } from \"../../types/postType\";\r\nimport FullTextEditor from \"./components/FullTextEditor/FullTextEditor\";\r\nimport { FullTextEditDiv, StyledBlogAddBody } from \"./style\";\r\n\r\nconst BlogUpdatePage: FC = () => {\r\n  const history = useNavigate();\r\n\r\n  const params = useParams();\r\n\r\n  const [html, setHtml] = useState<string>(\"\");\r\n  const [title, setTitle] = useState<string>(\"\");\r\n  const [types, setTypes] = useState<string[]>([]);\r\n\r\n  const { loading: postTypesLoading, _data: postTypesData } =\r\n    useQueryPostTypes();\r\n\r\n  const {\r\n    loading: postGetLoading,\r\n    error,\r\n    _data: postData,\r\n  } = useQueryBlog(params?.id ? params?.id : \"\");\r\n\r\n  const { updatePostFunction, loading } = useUpdatePost();\r\n\r\n  const updateBlog = () => {\r\n    const typeIds = types.map(\r\n      (type) => postTypesData.find((e: PostType) => e.type === type).id\r\n    );\r\n    updatePostFunction({\r\n      variables: {\r\n        id: params?.id ? params?.id : \"\",\r\n        types: typeIds,\r\n        title: title,\r\n        context: html,\r\n      },\r\n    })\r\n      .then((r) => {\r\n        history(`/blogs/null`);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!postGetLoading) {\r\n      setHtml(postData.context);\r\n      setTitle(postData.title);\r\n      const types = postData.types\r\n        ? postData.types.map((type) => type.type)\r\n        : [];\r\n      setTypes(types);\r\n    }\r\n  }, [postGetLoading]);\r\n\r\n  return (\r\n    <>\r\n      {postTypesLoading || postGetLoading ? (\r\n        <p>Loading</p>\r\n      ) : (\r\n        <StyledBlogAddBody>\r\n          <h2>updatePage</h2>\r\n          <h3>Title:</h3>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            variant=\"outlined\"\r\n            inputProps={{ \"aria-label\": \"Without label\" }}\r\n            value={title}\r\n            onChange={(v) => setTitle(v.target.value)}\r\n          />\r\n          <h3>Types:</h3>\r\n          <FormControl sx={{ m: 0, width: 300, mt: 3 }}>\r\n            <Select\r\n              multiple\r\n              displayEmpty\r\n              value={types}\r\n              onChange={(v) =>\r\n                setTypes(\r\n                  typeof v.target.value == \"string\"\r\n                    ? v.target.value.split(\",\")\r\n                    : v.target.value\r\n                )\r\n              }\r\n              input={<OutlinedInput />}\r\n              renderValue={(selected) => selected.join(\", \")}\r\n              inputProps={{ \"aria-label\": \"Without label\" }}\r\n            >\r\n              {postTypesData.map((postType: PostType) => (\r\n                <MenuItem key={postType.id} value={postType.type}>\r\n                  <Checkbox checked={types.indexOf(postType.type) > -1} />\r\n                  <ListItemText primary={postType.type} />\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <h3>Context:</h3>\r\n          <FullTextEditDiv>\r\n            <FullTextEditor\r\n              html={html}\r\n              setFullText={(e) => {\r\n                setHtml(e);\r\n              }}\r\n            />\r\n          </FullTextEditDiv>\r\n          <Button onClick={() => updateBlog()} variant=\"contained\">\r\n            Update\r\n          </Button>\r\n        </StyledBlogAddBody>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default BlogUpdatePage;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}