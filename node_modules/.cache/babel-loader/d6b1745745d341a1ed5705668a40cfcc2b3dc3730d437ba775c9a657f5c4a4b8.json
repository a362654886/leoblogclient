{"ast":null,"code":"import _slicedToArray from\"D:/Github/Leo_log_project/leoblogclient/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{Box,Button,Modal,TextField}from\"@mui/material\";import React from\"react\";import{useState}from\"react\";import{useAddPostType,useQueryPostTypes}from\"../../../../hooks/usePost\";import{StyledTypeHeader,StyledTypeSpan,StyledTypeSpanDiv}from\"./style\";import{EDIT_STATE}from\"../../../../common/const\";import{useNavigate}from\"react-router-dom\";import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var style={position:\"absolute\",top:\"50%\",left:\"50%\",transform:\"translate(-50%, -50%)\",width:400,border:\"2px solid #000\",boxShadow:24,p:4,display:\"inline\",backgroundColor:\"white\"};var SideBarComponent=function SideBarComponent(){var history=useNavigate();var _useQueryPostTypes=useQueryPostTypes(),_data=_useQueryPostTypes._data;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),openNewType=_useState2[0],setOpenNewType=_useState2[1];var _useState3=useState(\"\"),_useState4=_slicedToArray(_useState3,2),newTypeValue=_useState4[0],setNewTypeValue=_useState4[1];var _useAddPostType=useAddPostType(),addPostTypeFunction=_useAddPostType.addPostTypeFunction;var ToPostType=function ToPostType(blogId){return history(\"/blogs/\".concat(blogId));};var submitNewType=function submitNewType(){addPostTypeFunction({variables:{type:newTypeValue}}).then(function(r){window.location.reload();}).catch(function(error){console.log(error);});};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(StyledTypeHeader,{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Types\"}),EDIT_STATE?/*#__PURE__*/_jsx(Button,{variant:\"outlined\",onClick:function onClick(){return setOpenNewType(true);},children:\"Add New Type\"}):/*#__PURE__*/_jsx(_Fragment,{})]}),/*#__PURE__*/_jsx(StyledTypeSpanDiv,{children:_data&&_data.map(function(data,index){return/*#__PURE__*/_jsx(StyledTypeSpan,{onClick:function onClick(){return ToPostType(data.id);},children:data.type},index);})}),/*#__PURE__*/_jsx(Modal,{open:openNewType,onClose:function onClose(){return setOpenNewType(false);},\"aria-labelledby\":\"modal-modal-title\",\"aria-describedby\":\"modal-modal-description\",children:/*#__PURE__*/_jsxs(Box,{component:\"div\",sx:style,children:[/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(TextField,{id:\"outlined-basic\",label:\"New Type\",variant:\"outlined\",onChange:function onChange(v){return setNewTypeValue(v.target.value);}})}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return submitNewType();},variant:\"contained\",children:\"Submit\"})]})})]});};export default SideBarComponent;","map":{"version":3,"names":["Box","Button","Modal","TextField","React","useState","useAddPostType","useQueryPostTypes","StyledTypeHeader","StyledTypeSpan","StyledTypeSpanDiv","EDIT_STATE","useNavigate","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","style","position","top","left","transform","width","border","boxShadow","p","display","backgroundColor","SideBarComponent","history","_useQueryPostTypes","_data","_useState","_useState2","_slicedToArray","openNewType","setOpenNewType","_useState3","_useState4","newTypeValue","setNewTypeValue","_useAddPostType","addPostTypeFunction","ToPostType","blogId","concat","submitNewType","variables","type","then","r","window","location","reload","catch","error","console","log","children","variant","onClick","map","data","index","id","open","onClose","component","sx","label","onChange","v","target","value"],"sources":["D:/Github/Leo_log_project/leoblogclient/src/pages/HomePage/components/sideBar/SideBarComponent.tsx"],"sourcesContent":["import { Box, Button, Modal, TextField } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { FC, useState } from \"react\";\r\nimport { useAddPostType, useQueryPostTypes } from \"../../../../hooks/usePost\";\r\nimport { PostType } from \"../../../../types/postType\";\r\nimport { StyledTypeHeader, StyledTypeSpan, StyledTypeSpanDiv } from \"./style\";\r\nimport { EDIT_STATE } from \"../../../../common/const\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst style = {\r\n  position: \"absolute\" as \"absolute\",\r\n  top: \"50%\",\r\n  left: \"50%\",\r\n  transform: \"translate(-50%, -50%)\",\r\n  width: 400,\r\n  border: \"2px solid #000\",\r\n  boxShadow: 24,\r\n  p: 4,\r\n  display: \"inline\",\r\n  backgroundColor: \"white\",\r\n};\r\n\r\nconst SideBarComponent: FC = () => {\r\n  const history = useNavigate();\r\n\r\n  const { _data } = useQueryPostTypes();\r\n\r\n  const [openNewType, setOpenNewType] = useState(false);\r\n  const [newTypeValue, setNewTypeValue] = useState(\"\");\r\n\r\n  const { addPostTypeFunction } = useAddPostType();\r\n\r\n  const ToPostType = (blogId: string) => history(`/blogs/${blogId}`);\r\n\r\n  const submitNewType = () => {\r\n    addPostTypeFunction({\r\n      variables: { type: newTypeValue },\r\n    })\r\n      .then((r) => {\r\n        window.location.reload();\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledTypeHeader>\r\n        <h3>Types</h3>\r\n        {EDIT_STATE ? (\r\n          <Button variant=\"outlined\" onClick={() => setOpenNewType(true)}>\r\n            Add New Type\r\n          </Button>\r\n        ) : (\r\n          <></>\r\n        )}\r\n      </StyledTypeHeader>\r\n      <StyledTypeSpanDiv>\r\n        {_data &&\r\n          _data.map((data: PostType, index: number) => (\r\n            <StyledTypeSpan key={index} onClick={() => ToPostType(data.id)}>\r\n              {data.type}\r\n            </StyledTypeSpan>\r\n          ))}\r\n      </StyledTypeSpanDiv>\r\n      <Modal\r\n        open={openNewType}\r\n        onClose={() => setOpenNewType(false)}\r\n        aria-labelledby=\"modal-modal-title\"\r\n        aria-describedby=\"modal-modal-description\"\r\n      >\r\n        <Box component=\"div\" sx={style}>\r\n          <div>\r\n            <TextField\r\n              id=\"outlined-basic\"\r\n              label=\"New Type\"\r\n              variant=\"outlined\"\r\n              onChange={(v) => setNewTypeValue(v.target.value)}\r\n            />\r\n          </div>\r\n          <br />\r\n          <Button onClick={() => submitNewType()} variant=\"contained\">\r\n            Submit\r\n          </Button>\r\n        </Box>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\nexport default SideBarComponent;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}