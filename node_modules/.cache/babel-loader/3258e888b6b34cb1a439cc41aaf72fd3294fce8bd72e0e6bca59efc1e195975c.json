{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$();\nimport { ADD_POST, QUERY_POST, QUERY_POSTS, UPDATE_POST } from \"../graphql/post\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { ADD_POST_TYPE, QUERY_POST_TYPES } from \"../graphql/postType\";\nexport const useQueryBlogs = (pageSize, page, typeId) => {\n  _s();\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_POSTS, {\n    variables: {\n      pageNumber: pageSize,\n      page: page,\n      typeId: typeId == \"null\" ? \"\" : typeId\n    }\n  });\n  const _data = data === null || data === void 0 ? void 0 : data.posts.data;\n  return {\n    loading,\n    _data,\n    total: data === null || data === void 0 ? void 0 : data.posts.total\n  };\n};\n_s(useQueryBlogs, \"HasvTXHwlBNedvPpf4Gl00Z2xbw=\", false, function () {\n  return [useQuery];\n});\nexport const useQueryBlog = id => {\n  _s2();\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(QUERY_POST, {\n    variables: {\n      id: id\n    }\n  });\n  const _data = data === null || data === void 0 ? void 0 : data.post.data;\n  const relatedPosts = data === null || data === void 0 ? void 0 : data.post.relatedPosts;\n  return {\n    loading,\n    error,\n    _data,\n    relatedPosts\n  };\n};\n_s2(useQueryBlog, \"OQZiY3KqWoytFPIJWw/H9Hrmbok=\", false, function () {\n  return [useQuery];\n});\nexport const useQueryPostTypes = () => {\n  _s3();\n  const {\n    loading,\n    data\n  } = useQuery(QUERY_POST_TYPES);\n  const _data = data === null || data === void 0 ? void 0 : data.postTypes.data;\n  return {\n    loading,\n    _data\n  };\n};\n_s3(useQueryPostTypes, \"HasvTXHwlBNedvPpf4Gl00Z2xbw=\", false, function () {\n  return [useQuery];\n});\nexport const useAddPost = () => {\n  _s4();\n  const [addPostFunction, {\n    data,\n    loading,\n    error\n  }] = useMutation(ADD_POST);\n  const _data = data === null || data === void 0 ? void 0 : data.addPost.data;\n  return {\n    addPostFunction,\n    loading,\n    error,\n    _data\n  };\n};\n_s4(useAddPost, \"E4uUi5zxEPFqNXp7dKQlCYilgng=\", false, function () {\n  return [useMutation];\n});\nexport const useUpdatePost = () => {\n  _s5();\n  const [updatePostFunction, {\n    data,\n    loading,\n    error\n  }] = useMutation(UPDATE_POST);\n  const _data = data === null || data === void 0 ? void 0 : data.addPost.data;\n  return {\n    updatePostFunction,\n    loading,\n    error,\n    _data\n  };\n};\n_s5(useUpdatePost, \"pIOUJxTQEyYlKVu/cm+ons/Zijg=\", false, function () {\n  return [useMutation];\n});\nexport const useAddPostType = () => {\n  _s6();\n  const [addPostTypeFunction, {\n    data,\n    loading,\n    error\n  }] = useMutation(ADD_POST_TYPE);\n  const _data = data === null || data === void 0 ? void 0 : data.addPostType.data;\n  return {\n    addPostTypeFunction,\n    loading,\n    error,\n    _data\n  };\n};\n_s6(useAddPostType, \"+pQV9K0YH5gERODF+ufus7iglqk=\", false, function () {\n  return [useMutation];\n});","map":{"version":3,"names":["ADD_POST","QUERY_POST","QUERY_POSTS","UPDATE_POST","useMutation","useQuery","ADD_POST_TYPE","QUERY_POST_TYPES","useQueryBlogs","pageSize","page","typeId","_s","loading","data","variables","pageNumber","_data","posts","total","useQueryBlog","id","_s2","error","post","relatedPosts","useQueryPostTypes","_s3","postTypes","useAddPost","_s4","addPostFunction","addPost","useUpdatePost","_s5","updatePostFunction","useAddPostType","_s6","addPostTypeFunction","addPostType"],"sources":["D:/Github/Leo_log_project/leoblogclient/src/hooks/usePost.ts"],"sourcesContent":["import {\r\n  ADD_POST,\r\n  QUERY_POST,\r\n  QUERY_POSTS,\r\n  UPDATE_POST,\r\n} from \"../graphql/post\";\r\nimport { ApolloError, useMutation, useQuery } from \"@apollo/client\";\r\nimport { ADD_POST_TYPE, QUERY_POST_TYPES } from \"../graphql/postType\";\r\nimport { Post, RelatedPost } from \"../types/postType\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const useQueryBlogs = (\r\n  pageSize: number,\r\n  page: number,\r\n  typeId: string\r\n) => {\r\n  const { loading, data } = useQuery(QUERY_POSTS, {\r\n    variables: {\r\n      pageNumber: pageSize,\r\n      page: page,\r\n      typeId: typeId == \"null\" ? \"\" : typeId,\r\n    },\r\n  });\r\n  const _data = data?.posts.data;\r\n\r\n  return { loading, _data, total: data?.posts.total };\r\n};\r\n\r\nexport const useQueryBlog = (\r\n  id: string\r\n): {\r\n  loading: boolean;\r\n  error: ApolloError | undefined;\r\n  _data: Post;\r\n  relatedPosts: RelatedPost[];\r\n} => {\r\n  const { loading, error, data } = useQuery(QUERY_POST, {\r\n    variables: { id: id },\r\n  });\r\n  const _data = data?.post.data;\r\n  const relatedPosts = data?.post.relatedPosts;\r\n  return { loading, error, _data, relatedPosts };\r\n};\r\n\r\nexport const useQueryPostTypes = () => {\r\n  const { loading, data } = useQuery(QUERY_POST_TYPES);\r\n  const _data = data?.postTypes.data;\r\n  return { loading, _data };\r\n};\r\n\r\nexport const useAddPost = () => {\r\n  const [addPostFunction, { data, loading, error }] = useMutation(ADD_POST);\r\n  const _data = data?.addPost.data;\r\n  return { addPostFunction, loading, error, _data };\r\n};\r\n\r\nexport const useUpdatePost = () => {\r\n  const [updatePostFunction, { data, loading, error }] =\r\n    useMutation(UPDATE_POST);\r\n  const _data = data?.addPost.data;\r\n  return { updatePostFunction, loading, error, _data };\r\n};\r\n\r\nexport const useAddPostType = () => {\r\n  const [addPostTypeFunction, { data, loading, error }] =\r\n    useMutation(ADD_POST_TYPE);\r\n  const _data = data?.addPostType.data;\r\n  return { addPostTypeFunction, loading, error, _data };\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}