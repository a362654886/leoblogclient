[{"D:\\Github\\Leo_log_project\\leoblogclient\\src\\index.tsx":"1","D:\\Github\\Leo_log_project\\leoblogclient\\src\\App.tsx":"2","D:\\Github\\Leo_log_project\\leoblogclient\\src\\appCss.ts":"3","D:\\Github\\Leo_log_project\\leoblogclient\\src\\config\\routeConfig.tsx":"4","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\BlogPage\\BlogPage.tsx":"5","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\BlogUpdatePage\\BlogUpdatePage.tsx":"6","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\BlogAddPage\\BlogAddPage.tsx":"7","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subHome\\SubHomePageComponent.tsx":"8","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subBlogs\\SubBlogsPageComponent.tsx":"9","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subAboutMe\\SubAboutMeComponent.tsx":"10","D:\\Github\\Leo_log_project\\leoblogclient\\src\\hooks\\usePost.ts":"11","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\style.ts":"12","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\BlogPage\\style.ts":"13","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\BlogUpdatePage\\style.ts":"14","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\BlogAddPage\\style.ts":"15","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\HomePage.tsx":"16","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subBlogs\\style.ts":"17","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\loading\\Loading.tsx":"18","D:\\Github\\Leo_log_project\\leoblogclient\\src\\common\\const.ts":"19","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subAboutMe\\style.ts":"20","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\BlogUpdatePage\\components\\FullTextEditor\\FullTextEditor.tsx":"21","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\sideBar\\SideBarComponent.tsx":"22","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\BlogAddPage\\components\\FullTextEditor\\FullTextEditor.tsx":"23","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subHome\\components\\HomePageComponentTwo\\HomePageComponentTwo.tsx":"24","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subHome\\components\\HomePageComponentOne\\HomePageComponentOne.tsx":"25","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subAboutMe\\component\\EarthModal.tsx":"26","D:\\Github\\Leo_log_project\\leoblogclient\\src\\graphql\\post.ts":"27","D:\\Github\\Leo_log_project\\leoblogclient\\src\\graphql\\postType.ts":"28","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\loading\\style.ts":"29","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\sideBar\\style.ts":"30","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\BlogAddPage\\components\\FullTextEditor\\style.ts":"31","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\BlogUpdatePage\\components\\FullTextEditor\\style.ts":"32","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subHome\\components\\HomePageComponentTwo\\style.ts":"33","D:\\Github\\Leo_log_project\\leoblogclient\\src\\aws\\awsImage.tsx":"34","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subHome\\components\\ImgBgModal.tsx":"35","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subHome\\components\\ThreeJsModal.tsx":"36","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subHome\\components\\HomePageComponentOne\\style.ts":"37","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subHome\\components\\HomePageComponentOne\\component\\BallModal.tsx":"38","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subHome\\components\\HomePageComponentOne\\component\\CanvasLoader.tsx":"39"},{"size":589,"mtime":1681903426299,"results":"40","hashOfConfig":"41"},{"size":373,"mtime":1681634041867,"results":"42","hashOfConfig":"41"},{"size":695,"mtime":1681812245947,"results":"43","hashOfConfig":"41"},{"size":1520,"mtime":1681903439945,"results":"44","hashOfConfig":"41"},{"size":2821,"mtime":1681903539625,"results":"45","hashOfConfig":"41"},{"size":3697,"mtime":1681903547239,"results":"46","hashOfConfig":"41"},{"size":3142,"mtime":1681903506911,"results":"47","hashOfConfig":"41"},{"size":666,"mtime":1681695226006,"results":"48","hashOfConfig":"41"},{"size":2556,"mtime":1681903558285,"results":"49","hashOfConfig":"41"},{"size":6878,"mtime":1681903170344,"results":"50","hashOfConfig":"41"},{"size":1961,"mtime":1681879520208,"results":"51","hashOfConfig":"41"},{"size":798,"mtime":1681720058960,"results":"52","hashOfConfig":"41"},{"size":1453,"mtime":1681871487075,"results":"53","hashOfConfig":"41"},{"size":291,"mtime":1681787512791,"results":"54","hashOfConfig":"41"},{"size":250,"mtime":1681722543928,"results":"55","hashOfConfig":"41"},{"size":1256,"mtime":1681904000320,"results":"56","hashOfConfig":"41"},{"size":1252,"mtime":1681872264614,"results":"57","hashOfConfig":"41"},{"size":375,"mtime":1681696487697,"results":"58","hashOfConfig":"41"},{"size":34,"mtime":1681880489570,"results":"59","hashOfConfig":"41"},{"size":2151,"mtime":1681694122876,"results":"60","hashOfConfig":"41"},{"size":2414,"mtime":1681882596175,"results":"61","hashOfConfig":"41"},{"size":2603,"mtime":1681903551813,"results":"62","hashOfConfig":"41"},{"size":2414,"mtime":1681882591678,"results":"63","hashOfConfig":"41"},{"size":1395,"mtime":1681903566982,"results":"64","hashOfConfig":"41"},{"size":3099,"mtime":1681903589260,"results":"65","hashOfConfig":"41"},{"size":510,"mtime":1681903670631,"results":"66","hashOfConfig":"41"},{"size":1297,"mtime":1681832677422,"results":"67","hashOfConfig":"41"},{"size":355,"mtime":1681722712252,"results":"68","hashOfConfig":"41"},{"size":1696,"mtime":1681696475636,"results":"69","hashOfConfig":"41"},{"size":527,"mtime":1681632164214,"results":"70","hashOfConfig":"41"},{"size":217,"mtime":1680212022424,"results":"71","hashOfConfig":"41"},{"size":217,"mtime":1680212022424,"results":"72","hashOfConfig":"41"},{"size":543,"mtime":1681632047150,"results":"73","hashOfConfig":"41"},{"size":624,"mtime":1681882669764,"results":"74","hashOfConfig":"41"},{"size":552,"mtime":1681458162514,"results":"75","hashOfConfig":"41"},{"size":1157,"mtime":1681459839437,"results":"76","hashOfConfig":"41"},{"size":1054,"mtime":1681636240365,"results":"77","hashOfConfig":"41"},{"size":1312,"mtime":1681687797609,"results":"78","hashOfConfig":"41"},{"size":642,"mtime":1681687813487,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"o9liix",{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"83"},{"filePath":"97","messages":"98","suppressedMessages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"83"},{"filePath":"101","messages":"102","suppressedMessages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"104","messages":"105","suppressedMessages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"83"},{"filePath":"108","messages":"109","suppressedMessages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"83"},{"filePath":"112","messages":"113","suppressedMessages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"115","messages":"116","suppressedMessages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"83"},{"filePath":"119","messages":"120","suppressedMessages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"122","messages":"123","suppressedMessages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"125","messages":"126","suppressedMessages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"137","messages":"138","suppressedMessages":"139","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"140","messages":"141","suppressedMessages":"142","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"152","messages":"153","suppressedMessages":"154","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"155","messages":"156","suppressedMessages":"157","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"83"},{"filePath":"162","messages":"163","suppressedMessages":"164","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"165","messages":"166","suppressedMessages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"168","messages":"169","suppressedMessages":"170","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"171","messages":"172","suppressedMessages":"173","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"174","messages":"175","suppressedMessages":"176","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"177","messages":"178","suppressedMessages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"180","messages":"181","suppressedMessages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"183","messages":"184","suppressedMessages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"186","messages":"187","suppressedMessages":"188","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"189","usedDeprecatedRules":"83"},{"filePath":"190","messages":"191","suppressedMessages":"192","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"193","messages":"194","suppressedMessages":"195","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"196","usedDeprecatedRules":"83"},{"filePath":"197","messages":"198","suppressedMessages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},{"filePath":"200","messages":"201","suppressedMessages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"83"},{"filePath":"204","messages":"205","suppressedMessages":"206","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"83"},"D:\\Github\\Leo_log_project\\leoblogclient\\src\\index.tsx",[],[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\App.tsx",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\appCss.ts",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\config\\routeConfig.tsx",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\BlogPage\\BlogPage.tsx",["207","208","209","210"],[],"import { FC, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useQueryBlog } from \"../../hooks/usePost\";\r\nimport {\r\n  StyledBlogBody,\r\n  StyledBlogContextBody,\r\n  StyledBlogContextHeader,\r\n  StyledBlogRelateBlogsBody,\r\n  StyledBlogTypesDiv,\r\n  StyledTitle,\r\n} from \"./style\";\r\nimport { StyledHeader } from \"../HomePage/style\";\r\nimport {\r\n  BottomNavigation,\r\n  BottomNavigationAction,\r\n  Button,\r\n} from \"@mui/material\";\r\nimport logo from \"../../img/logo.jpg\";\r\nimport Loading from \"../HomePage/components/loading/Loading\";\r\n\r\nconst BlogPage: FC = () => {\r\n  const subPages = [\"\", \"blogs\", \"aboutMe\"];\r\n\r\n  const history = useNavigate();\r\n\r\n  const [value] = useState(0);\r\n\r\n  const params = useParams();\r\n\r\n  const { loading, error, _data, relatedPosts } = useQueryBlog(\r\n    params?.id ? params?.id : \"\"\r\n  );\r\n\r\n  const toBlogTypePage = (id: string) => history(`/leoblogclient/blogs/${id}`);\r\n\r\n  const getContext = () => {\r\n    return loading ? (\r\n      <Loading />\r\n    ) : error ? (\r\n      <>error</>\r\n    ) : (\r\n      <>\r\n        <StyledBlogContextHeader>\r\n          <h1>{_data.title}</h1>\r\n          <span>{new Date(Number(_data.createAt)).toDateString()}</span>\r\n        </StyledBlogContextHeader>\r\n        <StyledBlogTypesDiv>\r\n          <p>Types:</p>\r\n          {_data.types?.map((item) => {\r\n            return (\r\n              <span onClick={() => toBlogTypePage(item.id)}>{item.type}</span>\r\n            );\r\n          })}\r\n        </StyledBlogTypesDiv>\r\n        <StyledBlogContextBody\r\n          dangerouslySetInnerHTML={{\r\n            __html: _data.context ? _data.context : \"\",\r\n          }}\r\n        ></StyledBlogContextBody>\r\n        <StyledBlogRelateBlogsBody>\r\n          <h4>Related Blogs</h4>\r\n          {relatedPosts.map((relatedPost) => (\r\n            <p>\r\n              <a onClick={() => history(`/leoblogclient/blog/${relatedPost.id}`)}>\r\n                {relatedPost.title}\r\n              </a>\r\n            </p>\r\n          ))}\r\n        </StyledBlogRelateBlogsBody>\r\n        <></>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <StyledBlogBody>\r\n      <StyledHeader>\r\n        <img src={logo} />\r\n        <BottomNavigation\r\n          showLabels\r\n          value={value}\r\n          onChange={(event, newValue) => history(`/leoblogclient/${subPages[newValue]}`)}\r\n        >\r\n          <BottomNavigationAction label=\"Home\" />\r\n          <BottomNavigationAction label=\"Blogs\" />\r\n          <BottomNavigationAction label=\"About me\" />\r\n        </BottomNavigation>\r\n      </StyledHeader>\r\n      {getContext()}\r\n      <Button\r\n        variant=\"outlined\"\r\n        onClick={() => history(`/leoblogclient/updateBlog/${params?.id ? params?.id : \"\"}`)}\r\n      >\r\n        Update\r\n      </Button>\r\n    </StyledBlogBody>\r\n  );\r\n};\r\nexport default BlogPage;\r\n","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\BlogUpdatePage\\BlogUpdatePage.tsx",["211","212","213","214"],[],"import {\r\n  Button,\r\n  Checkbox,\r\n  FormControl,\r\n  ListItemText,\r\n  MenuItem,\r\n  OutlinedInput,\r\n  Select,\r\n  TextField,\r\n} from \"@mui/material\";\r\nimport { FC, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport {\r\n  useAddPost,\r\n  useQueryBlog,\r\n  useQueryPostTypes,\r\n  useUpdatePost,\r\n} from \"../../hooks/usePost\";\r\nimport { PostType } from \"../../types/postType\";\r\nimport FullTextEditor from \"./components/FullTextEditor/FullTextEditor\";\r\nimport { FullTextEditDiv, StyledBlogAddBody } from \"./style\";\r\n\r\nconst BlogUpdatePage: FC = () => {\r\n  const history = useNavigate();\r\n\r\n  const params = useParams();\r\n\r\n  const [html, setHtml] = useState<string>(\"\");\r\n  const [title, setTitle] = useState<string>(\"\");\r\n  const [types, setTypes] = useState<string[]>([]);\r\n\r\n  const { loading: postTypesLoading, _data: postTypesData } =\r\n    useQueryPostTypes();\r\n\r\n  const {\r\n    loading: postGetLoading,\r\n    error,\r\n    _data: postData,\r\n  } = useQueryBlog(params?.id ? params?.id : \"\");\r\n\r\n  const { updatePostFunction, loading } = useUpdatePost();\r\n\r\n  const updateBlog = () => {\r\n    const typeIds = types.map(\r\n      (type) => postTypesData.find((e: PostType) => e.type === type).id\r\n    );\r\n    updatePostFunction({\r\n      variables: {\r\n        id: params?.id ? params?.id : \"\",\r\n        types: typeIds,\r\n        title: title,\r\n        context: html,\r\n      },\r\n    })\r\n      .then((r) => {\r\n        history(`/leoblogclient/blogs/null`);\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!postGetLoading) {\r\n      setHtml(postData.context);\r\n      setTitle(postData.title);\r\n      const types = postData.types\r\n        ? postData.types.map((type) => type.type)\r\n        : [];\r\n      setTypes(types);\r\n    }\r\n  }, [postGetLoading]);\r\n\r\n  return (\r\n    <>\r\n      {postTypesLoading || postGetLoading ? (\r\n        <p>Loading</p>\r\n      ) : (\r\n        <StyledBlogAddBody>\r\n          <h2>updatePage</h2>\r\n          <h3>Title:</h3>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            variant=\"outlined\"\r\n            inputProps={{ \"aria-label\": \"Without label\" }}\r\n            value={title}\r\n            onChange={(v) => setTitle(v.target.value)}\r\n          />\r\n          <h3>Types:</h3>\r\n          <FormControl sx={{ m: 0, width: 300, mt: 3 }}>\r\n            <Select\r\n              multiple\r\n              displayEmpty\r\n              value={types}\r\n              onChange={(v) =>\r\n                setTypes(\r\n                  typeof v.target.value == \"string\"\r\n                    ? v.target.value.split(\",\")\r\n                    : v.target.value\r\n                )\r\n              }\r\n              input={<OutlinedInput />}\r\n              renderValue={(selected) => selected.join(\", \")}\r\n              inputProps={{ \"aria-label\": \"Without label\" }}\r\n            >\r\n              {postTypesData.map((postType: PostType) => (\r\n                <MenuItem key={postType.id} value={postType.type}>\r\n                  <Checkbox checked={types.indexOf(postType.type) > -1} />\r\n                  <ListItemText primary={postType.type} />\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          </FormControl>\r\n          <h3>Context:</h3>\r\n          <FullTextEditDiv>\r\n            <FullTextEditor\r\n              html={html}\r\n              setFullText={(e) => {\r\n                setHtml(e);\r\n              }}\r\n            />\r\n          </FullTextEditDiv>\r\n          <Button onClick={() => updateBlog()} variant=\"contained\">\r\n            Update\r\n          </Button>\r\n        </StyledBlogAddBody>\r\n      )}\r\n    </>\r\n  );\r\n};\r\nexport default BlogUpdatePage;\r\n","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\BlogAddPage\\BlogAddPage.tsx",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subHome\\SubHomePageComponent.tsx",["215"],[],"import { FC } from \"react\";\r\nimport HomePage from \"../../HomePage\";\r\nimport HomePageComponentOne from \"./components/HomePageComponentOne/HomePageComponentOne\";\r\nimport HomePageComponentThree from \"./components/HomePageComponentThree/HomePageComponentThree\";\r\nimport HomePageComponentTwo from \"./components/HomePageComponentTwo/HomePageComponentTwo\";\r\n\r\nconst SubHomeComponent: FC = () => {\r\n  const getContext = () => {\r\n    return (\r\n      <>\r\n        <HomePageComponentOne />\r\n        <HomePageComponentTwo />\r\n      </>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomePage state={0} context={getContext()} />\r\n    </>\r\n  );\r\n};\r\nexport default SubHomeComponent;\r\n","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subBlogs\\SubBlogsPageComponent.tsx",["216","217"],[],"import { Box, Button, Pagination } from \"@mui/material\";\r\nimport { FC, useEffect, useState } from \"react\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport { useQueryBlogs } from \"../../../../hooks/usePost\";\r\nimport { Post } from \"../../../../types/postType\";\r\nimport HomePage from \"../../HomePage\";\r\nimport SideBarComponent from \"../sideBar/SideBarComponent\";\r\nimport {\r\n  StyledBlogAnimation,\r\n  StyledBlogAnimationText,\r\n  StyledBlogBlock,\r\n  StyledBlogContainer,\r\n  StyledBlogMain,\r\n  StyledSideBar,\r\n} from \"./style\";\r\nimport Loading from \"../loading/Loading\";\r\nimport { EDIT_STATE } from \"../../../../common/const\";\r\n\r\nconst SubBlogsComponent: FC = () => {\r\n  const PAGE_SIZE = 10;\r\n\r\n  const params = useParams();\r\n\r\n  const [page, setPage] = useState(1);\r\n\r\n  const { loading, _data, total } = useQueryBlogs(\r\n    PAGE_SIZE,\r\n    page,\r\n    params?.typeId ? params?.typeId : \"\"\r\n  );\r\n\r\n  const history = useNavigate();\r\n\r\n  const ToSingle = (blogId: string) => history(`/leoblogclient/blog/${blogId}`);\r\n\r\n  const ToBlogAddPage = () => history(`/leoblogclient/addBlog`);\r\n\r\n  const handleChange = (event: React.ChangeEvent<unknown>, value: number) => {\r\n    setPage(value);\r\n  };\r\n\r\n  const getContext = () => {\r\n    return loading ? (\r\n      <Loading />\r\n    ) : (\r\n      <StyledBlogContainer>\r\n        <StyledBlogMain>\r\n          {EDIT_STATE ? (\r\n            <Button variant=\"outlined\" onClick={() => ToBlogAddPage()}>\r\n              Add New Blog\r\n            </Button>\r\n          ) : (\r\n            <></>\r\n          )}\r\n          {_data &&\r\n            _data.map((data: Post, index: number) => (\r\n              <StyledBlogBlock key={index}>\r\n                <StyledBlogAnimation>\r\n                  <StyledBlogAnimationText\r\n                    onClick={() => ToSingle(data.id)}\r\n                    title={data.title}\r\n                  >\r\n                    {data.title}\r\n                  </StyledBlogAnimationText>\r\n                  <span>{new Date(Number(data.createAt)).toDateString()}</span>\r\n                </StyledBlogAnimation>\r\n              </StyledBlogBlock>\r\n            ))}\r\n          <Pagination\r\n            count={Math.ceil(total / PAGE_SIZE)}\r\n            page={page}\r\n            onChange={handleChange}\r\n          />\r\n        </StyledBlogMain>\r\n        <StyledSideBar>\r\n          <SideBarComponent />\r\n        </StyledSideBar>\r\n      </StyledBlogContainer>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <HomePage state={1} context={getContext()} />\r\n    </>\r\n  );\r\n};\r\nexport default SubBlogsComponent;\r\n","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subAboutMe\\SubAboutMeComponent.tsx",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\hooks\\usePost.ts",["218","219","220"],[],"import {\r\n  ADD_POST,\r\n  QUERY_POST,\r\n  QUERY_POSTS,\r\n  UPDATE_POST,\r\n} from \"../graphql/post\";\r\nimport { ApolloError, useMutation, useQuery } from \"@apollo/client\";\r\nimport { ADD_POST_TYPE, QUERY_POST_TYPES } from \"../graphql/postType\";\r\nimport { Post, RelatedPost } from \"../types/postType\";\r\nimport { useEffect, useState } from \"react\";\r\n\r\nexport const useQueryBlogs = (\r\n  pageSize: number,\r\n  page: number,\r\n  typeId: string\r\n) => {\r\n  const { loading, data } = useQuery(QUERY_POSTS, {\r\n    variables: {\r\n      pageNumber: pageSize,\r\n      page: page,\r\n      typeId: typeId == \"null\" ? \"\" : typeId,\r\n    },\r\n  });\r\n  const _data = data?.posts.data;\r\n\r\n  return { loading, _data, total: data?.posts.total };\r\n};\r\n\r\nexport const useQueryBlog = (\r\n  id: string\r\n): {\r\n  loading: boolean;\r\n  error: ApolloError | undefined;\r\n  _data: Post;\r\n  relatedPosts: RelatedPost[];\r\n} => {\r\n  const { loading, error, data } = useQuery(QUERY_POST, {\r\n    variables: { id: id },\r\n  });\r\n  const _data = data?.post.data;\r\n  const relatedPosts = data?.post.relatedPosts;\r\n  return { loading, error, _data, relatedPosts };\r\n};\r\n\r\nexport const useQueryPostTypes = () => {\r\n  const { loading, data } = useQuery(QUERY_POST_TYPES);\r\n  const _data = data?.postTypes.data;\r\n  return { loading, _data };\r\n};\r\n\r\nexport const useAddPost = () => {\r\n  const [addPostFunction, { data, loading, error }] = useMutation(ADD_POST);\r\n  const _data = data?.addPost.data;\r\n  return { addPostFunction, loading, error, _data };\r\n};\r\n\r\nexport const useUpdatePost = () => {\r\n  const [updatePostFunction, { data, loading, error }] =\r\n    useMutation(UPDATE_POST);\r\n  const _data = data?.addPost.data;\r\n  return { updatePostFunction, loading, error, _data };\r\n};\r\n\r\nexport const useAddPostType = () => {\r\n  const [addPostTypeFunction, { data, loading, error }] =\r\n    useMutation(ADD_POST_TYPE);\r\n  const _data = data?.addPostType.data;\r\n  return { addPostTypeFunction, loading, error, _data };\r\n};\r\n","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\style.ts",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\BlogPage\\style.ts",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\BlogUpdatePage\\style.ts",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\BlogAddPage\\style.ts",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\HomePage.tsx",["221","222"],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subBlogs\\style.ts",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\loading\\Loading.tsx",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\common\\const.ts",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subAboutMe\\style.ts",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\BlogUpdatePage\\components\\FullTextEditor\\FullTextEditor.tsx",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\sideBar\\SideBarComponent.tsx",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\BlogAddPage\\components\\FullTextEditor\\FullTextEditor.tsx",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subHome\\components\\HomePageComponentTwo\\HomePageComponentTwo.tsx",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subHome\\components\\HomePageComponentOne\\HomePageComponentOne.tsx",["223"],[],"import { FC, Suspense } from \"react\";\r\nimport { Canvas } from \"react-three-fiber\";\r\nimport ImgBgModal from \"../ImgBgModal\";\r\nimport {\r\n  StyledHomeContainerOne,\r\n  StyledHomeContext,\r\n  StyledHomeContextDiv,\r\n  StyledImage,\r\n} from \"./style\";\r\nimport BallModal from \"./component/BallModal\";\r\nimport CanvasLoader from \"./component/CanvasLoader\";\r\nimport { OrbitControls } from \"@react-three/drei\";\r\n\r\nimport css from \"./component/assets/css.png\";\r\nimport html from \"./component/assets/html.png\";\r\nimport mongodb from \"./component/assets/mongodb.png\";\r\nimport nodejs from \"./component/assets/nodejs.png\";\r\nimport reactjs from \"./component/assets/reactjs.png\";\r\nimport redux from \"./component/assets/redux.png\";\r\nimport typescript from \"./component/assets/typescript.png\";\r\nimport { Button } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport moon from \"../../../../../../img/moon.png\";\r\n\r\nexport const images = [css, nodejs, html, mongodb];\r\nexport const images2 = [reactjs, redux, typescript];\r\n\r\nconst HomePageComponentOne: FC = () => {\r\n  const history = useNavigate();\r\n\r\n  const getImgBgCanvas = () => {\r\n    return (\r\n      <>\r\n        <Canvas\r\n          gl={{ antialias: true }}\r\n          style={{\r\n            width: \"100%\",\r\n            height: \"600px\",\r\n          }}\r\n        >\r\n          <ambientLight />\r\n          <pointLight position={[10, 10, 10]} color={\"red\"} />\r\n          <ImgBgModal />\r\n        </Canvas>\r\n        <img src={moon} />\r\n      </>\r\n    );\r\n  };\r\n\r\n  const getBallCanvas = (img: any, key: number) => {\r\n    return (\r\n      <div key={key}>\r\n        <Canvas\r\n          style={{\r\n            width: \"200px\",\r\n            height: \"200px\",\r\n          }}\r\n        >\r\n          <Suspense fallback={<CanvasLoader />}>\r\n            <OrbitControls enableZoom={false} />\r\n            <BallModal position={[0, 0, 0]} imgUrl={img} />\r\n          </Suspense>\r\n        </Canvas>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <StyledHomeContainerOne>\r\n        <StyledHomeContext>\r\n          <StyledHomeContextDiv>\r\n            <h3>Hi, I'm Leo Lu</h3>\r\n            <p>\r\n              an experienced and results-driven full-stack developer, skilled in\r\n              crafting effective websites and applications. A technically\r\n              proficient problem-solver with a calm and focused demeanour.\r\n              Seeking new challenges to further improve and grow with a leading\r\n              company.\r\n            </p>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              onClick={() => history(`/leoblogclient/aboutMe`)}\r\n            >\r\n              About Me\r\n            </Button>\r\n            <div>{images.map((item, index) => getBallCanvas(item, index))}</div>\r\n            <div>\r\n              {images2.map((item, index) => getBallCanvas(item, index))}\r\n            </div>\r\n          </StyledHomeContextDiv>\r\n        </StyledHomeContext>\r\n        <StyledImage>{getImgBgCanvas()}</StyledImage>\r\n      </StyledHomeContainerOne>\r\n    </>\r\n  );\r\n};\r\nexport default HomePageComponentOne;\r\n","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subAboutMe\\component\\EarthModal.tsx",["224","225"],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\graphql\\post.ts",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\graphql\\postType.ts",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\loading\\style.ts",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\sideBar\\style.ts",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\BlogAddPage\\components\\FullTextEditor\\style.ts",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\BlogUpdatePage\\components\\FullTextEditor\\style.ts",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subHome\\components\\HomePageComponentTwo\\style.ts",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\aws\\awsImage.tsx",["226"],[],"import AWS, { AWSError } from \"aws-sdk\";\r\n\r\nAWS.config.update({\r\n  region: \"us-east-1\"\r\n});\r\n\r\nconst s3 = new AWS.S3({ apiVersion: \"2006-03-01\" });\r\n\r\nexport const uploadImage = (image: File, imageName: string, fn: any) => {\r\n  const params = {\r\n    Bucket: \"leoblogimages\",\r\n    Key: imageName,\r\n    Body: image,\r\n    ContentType: \"image/jpeg\",\r\n  };\r\n\r\n  // call S3 to retrieve upload file to specified bucket\r\n  s3.upload(params, (err: any, data: any) => {\r\n    if (err) {\r\n      console.log(err);\r\n      return false;\r\n    }\r\n    if (data) {\r\n      console.log(data);\r\n      fn();\r\n      return true;\r\n    }\r\n  });\r\n};\r\n","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subHome\\components\\ImgBgModal.tsx",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subHome\\components\\ThreeJsModal.tsx",["227"],[],"import { useFrame } from \"@react-three/fiber\";\r\nimport {\r\n  OrbitControls,\r\n  PerspectiveCamera,\r\n  RenderTexture,\r\n  Text,\r\n} from \"@react-three/drei\";\r\nimport { FC, useRef } from \"react\";\r\n\r\nconst ThreeJsModal: FC = () => {\r\n  const textRef = useRef<any>();\r\n\r\n  useFrame(\r\n    (state) => (textRef.current.position.x = Math.sin(state.clock.elapsedTime))\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ambientLight />\r\n      <directionalLight position={[3, 2, 1]} />\r\n      <OrbitControls enableZoom={false} autoRotate />\r\n      <mesh position={[0, 0, 0]}>\r\n        <boxGeometry args={[2, 2, 2]} />\r\n\r\n        <meshStandardMaterial>\r\n          <RenderTexture attach={\"map\"}>\r\n            <PerspectiveCamera makeDefault position={[0, 0, 5]} />\r\n            <color attach=\"background\" args={[\"#dc9dcd\"]} />\r\n            <Text ref={textRef} fontSize={2} color=\"#555\">\r\n              Blogs\r\n            </Text>\r\n          </RenderTexture>\r\n        </meshStandardMaterial>\r\n      </mesh>\r\n    </>\r\n  );\r\n};\r\nexport default ThreeJsModal;\r\n\r\n{\r\n  /*onPointerOver={(event) => setHover(true)}\r\n        onPointerOut={(event) => setHover(false)}\r\n  scale={active ? 1 : 2}*/\r\n}\r\n","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subHome\\components\\HomePageComponentOne\\style.ts",[],[],"D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subHome\\components\\HomePageComponentOne\\component\\BallModal.tsx",["228"],[],"import { Vector3 } from \"@react-three/fiber\";\r\nimport { Decal, Float, OrbitControls, useTexture } from \"@react-three/drei\";\r\nimport { FC } from \"react\";\r\nimport { Texture } from \"three\";\r\n\r\ninterface BallModalProps {\r\n  position: Vector3;\r\n  imgUrl: any;\r\n}\r\n\r\nconst BallModal: FC<BallModalProps> = (props) => {\r\n  const decal = useTexture(props.imgUrl);\r\n\r\n  return (\r\n    <>\r\n      <Float\r\n        speed={1.75}\r\n        rotationIntensity={1}\r\n        floatIntensity={2}\r\n        position={props.position}\r\n      >\r\n        <ambientLight intensity={0.25} />\r\n        <directionalLight />\r\n        <OrbitControls enableZoom={false} />\r\n        <mesh castShadow receiveShadow scale={2}>\r\n          <icosahedronGeometry args={[1, 1]} />\r\n          <meshStandardMaterial\r\n            color=\"#fff8ed\"\r\n            polygonOffset\r\n            polygonOffsetFactor={-5}\r\n            flatShading\r\n          />\r\n          <Decal\r\n            position={[0, 0, 1]}\r\n            rotation={[2 * Math.PI, 0, 6.25]}\r\n            scale={1}\r\n            map={decal as Texture}\r\n            flatShading\r\n          />\r\n        </mesh>\r\n      </Float>\r\n    </>\r\n  );\r\n};\r\nexport default BallModal;\r\n\r\n{\r\n  /*onPointerOver={(event) => setHover(true)}\r\n        onPointerOut={(event) => setHover(false)}\r\n  scale={active ? 1 : 2}*/\r\n}\r\n","D:\\Github\\Leo_log_project\\leoblogclient\\src\\pages\\HomePage\\components\\subHome\\components\\HomePageComponentOne\\component\\CanvasLoader.tsx",[],[],{"ruleId":"229","severity":1,"message":"230","line":1,"column":14,"nodeType":"231","messageId":"232","endLine":1,"endColumn":23},{"ruleId":"229","severity":1,"message":"233","line":10,"column":3,"nodeType":"231","messageId":"232","endLine":10,"endColumn":14},{"ruleId":"234","severity":1,"message":"235","line":64,"column":15,"nodeType":"236","endLine":64,"endColumn":83},{"ruleId":"237","severity":1,"message":"238","line":78,"column":9,"nodeType":"236","endLine":78,"endColumn":27},{"ruleId":"229","severity":1,"message":"239","line":14,"column":3,"nodeType":"231","messageId":"232","endLine":14,"endColumn":13},{"ruleId":"229","severity":1,"message":"240","line":37,"column":5,"nodeType":"231","messageId":"232","endLine":37,"endColumn":10},{"ruleId":"229","severity":1,"message":"241","line":41,"column":31,"nodeType":"231","messageId":"232","endLine":41,"endColumn":38},{"ruleId":"242","severity":1,"message":"243","line":72,"column":6,"nodeType":"244","endLine":72,"endColumn":22,"suggestions":"245"},{"ruleId":"229","severity":1,"message":"246","line":4,"column":8,"nodeType":"231","messageId":"232","endLine":4,"endColumn":30},{"ruleId":"229","severity":1,"message":"247","line":1,"column":10,"nodeType":"231","messageId":"232","endLine":1,"endColumn":13},{"ruleId":"229","severity":1,"message":"230","line":2,"column":14,"nodeType":"231","messageId":"232","endLine":2,"endColumn":23},{"ruleId":"229","severity":1,"message":"230","line":10,"column":10,"nodeType":"231","messageId":"232","endLine":10,"endColumn":19},{"ruleId":"229","severity":1,"message":"248","line":10,"column":21,"nodeType":"231","messageId":"232","endLine":10,"endColumn":29},{"ruleId":"249","severity":1,"message":"250","line":21,"column":22,"nodeType":"251","messageId":"252","endLine":21,"endColumn":24},{"ruleId":"229","severity":1,"message":"253","line":5,"column":22,"nodeType":"231","messageId":"232","endLine":5,"endColumn":34},{"ruleId":"237","severity":1,"message":"238","line":27,"column":9,"nodeType":"236","endLine":27,"endColumn":27},{"ruleId":"237","severity":1,"message":"238","line":45,"column":9,"nodeType":"236","endLine":45,"endColumn":27},{"ruleId":"229","severity":1,"message":"254","line":1,"column":25,"nodeType":"231","messageId":"232","endLine":1,"endColumn":32},{"ruleId":"229","severity":1,"message":"255","line":1,"column":34,"nodeType":"231","messageId":"232","endLine":1,"endColumn":41},{"ruleId":"229","severity":1,"message":"256","line":1,"column":15,"nodeType":"231","messageId":"232","endLine":1,"endColumn":23},{"ruleId":"257","severity":1,"message":"258","line":40,"column":1,"nodeType":"259","messageId":"260","endLine":44,"endColumn":2},{"ruleId":"257","severity":1,"message":"258","line":47,"column":1,"nodeType":"259","messageId":"260","endLine":51,"endColumn":2},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'StyledTitle' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'useAddPost' is defined but never used.","'error' is assigned a value but never used.","'loading' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'postData.context', 'postData.title', and 'postData.types'. Either include them or remove the dependency array.","ArrayExpression",["261"],"'HomePageComponentThree' is defined but never used.","'Box' is defined but never used.","'useState' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'StyledFooter' is defined but never used.","'Preload' is defined but never used.","'useGLTF' is defined but never used.","'AWSError' is defined but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock",{"desc":"262","fix":"263"},"Update the dependencies array to be: [postData.context, postData.title, postData.types, postGetLoading]",{"range":"264","text":"265"},[1831,1847],"[postData.context, postData.title, postData.types, postGetLoading]"]